{"version":3,"sources":["action.js","FilterableList.js","FilterOption.js","FilterOptionsContainer.js","AddListItemForm.js","App.js","AppContainer.js","serviceWorker.js","reducer.js","index.js"],"names":["TYPES","BEGIN_DONE_ITEM","SUCCESS_DONE_ITEM","ADD_ITEM","beginDoneItem","id","type","payload","successDoneItem","quote","src_action","doneItem","itemId","console","log","dispatch","fetch","cache","then","response","json","JSON","stringify","content","addItem","nameList","highestIndex","FilterableList","props","react_default","a","createElement","map","item","key","name","date","priority","onClick","e","onDoneButtonClick","mapNameList","FilterOption","_this","this","onFilterOptionClick","React","Component","FilterOptionsContainer","FilterOption_FilterOption","onFilterOptionClickHandler","AddListItemForm","onSubmit","onAddItemClick","placeholder","value","PRIORITY","High","Med","Low","sortAlphaHelper","b","nameA","toUpperCase","nameB","sortDateHelper","Date","sortPriorityHelper","priorityA","priorityB","shuffle","array","temp","randomIndex","curr","length","Math","floor","random","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterOptionEvent","preventDefault","target","innerText","sort","reverse","setState","onAddItemClickHandler","addItemClickEvent","formInputs","newNameList","newIndex","newItem","push","onDoneButtonClickHandler","state","className","FilterOptionsContainer_FilterOptionsContainer","src_FilterableList_0","src_AddListItemForm_0","connect","ACTIONS","Boolean","window","location","hostname","match","defaultState","listReducer","arguments","undefined","action","filter","objectSpread","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c760afb.chunk.js","sourcesContent":["const TYPES = {\n  BEGIN_DONE_ITEM: \"BEGIN_DONE_ITEM\",\n  SUCCESS_DONE_ITEM: \"SUCCESS_DONE_ITEM\",\n  ADD_ITEM: \"ADD_ITEM\"\n} \n\nconst beginDoneItem = (id) => ({\n  type: TYPES.BEGIN_DONE_ITEM,\n  payload: id\n});\n\nconst successDoneItem = (quote) => ({\n  type: TYPES.SUCCESS_DONE_ITEM,\n  payload: quote\n})\n\nconst addItem = (nameList, highestIndex) => ({\n  type: TYPES.ADD_ITEM,\n  payload: {\n    nameList,\n    highestIndex\n  }\n});\n\nfunction doneItem(itemId) {\n  // fetch('http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1')\n  //   .then((response) => {\n  //     return response.json();\n  //   })\n  //   .then((quote) => {\n  //     return JSON.stringify(quote[0].content);\n  //   });\n  console.log(itemId);\n  return (dispatch) => {\n    dispatch(beginDoneItem(itemId));\n\n    // let response = await fetch('http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1');\n    // let quote = await response.json();\n\n    fetch('http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1', {cache: 'no-cache'})\n    .then((response) => {\n      return response.json();\n    })\n    .then((quote) => {\n      dispatch(successDoneItem(JSON.stringify(quote[0].content)));\n    });\n\n    // return (dispatch) => {\n    //   console.log('here')\n    //   dispatch(successDoneItem(quote[0].content))\n    // };\n  \n  }\n}\n\nexport default {\n  doneItem,\n  addItem,\n  TYPES\n};","import React from 'react';\nimport \"./FilterableList.css\"\n\n// export default class FilterableList extends React.Component {\n//   mapNameList = () => {\n//     let list = this.props.nameList;\n//     return list.map(item => (\n//       <li key={item.id}>\n//         <div>{item.name}</div>\n//         <div>{item.date}</div>\n//       </li>\n//     ));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <ul>\n//           {this.mapNameList()}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\nconst mapNameList = (nameList, props) => {\n  return nameList.map(item => (\n    <li key={item.id}>\n      <div>{item.name}</div>\n      <div>{item.date}</div>\n      <div>{item.priority}</div> \n      <button onClick={(e) => props.onDoneButtonClick(item.id)}>X</button>\n    </li>\n  ));\n}\n\nconst FilterableList = (props) => {\n  let nameList = props.nameList;\n  return (\n    <div id=\"listContainer\">\n      <ul>\n        {mapNameList(nameList, props)}\n      </ul>\n    </div>\n  )\n}\n\nexport default FilterableList;\n","import React from \"react\";\n\nexport default class FilterOption extends React.Component {\n\n  render() {\n    return (\n      <button\n        onClick={(e) => this.props.onFilterOptionClick(e)}\n      >\n        {this.props.name}\n      </button>\n    );\n  }\n}","import React from 'react';\nimport FilterOption from './FilterOption';\n\nexport default class FilterOptionsContainer extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <FilterOption \n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"A-Z\"\n        />\n        <FilterOption \n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"Z-A\"\n        />\n        <FilterOption \n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"Random\"\n        />\n        <FilterOption \n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"Chronological\"\n        />\n        <FilterOption \n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"Reverse Chronological\"\n        />\n        <FilterOption\n          onFilterOptionClick={this.props.onFilterOptionClickHandler}\n          name=\"Priority\"\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport \"./AddListItemForm.css\";\n\nconst AddListItemForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.onAddItemClick}>\n        <input name=\"fName\" placeholder=\"First Name\" />\n        <input name=\"date\" placeholder=\"YYYY-MM-DD\" />\n        <input name=\"priority\" placeholder=\"Low, Med, or High\" />\n        <input type=\"submit\" value=\"Add Item\" />\n      </form>\n    </div>\n  );\n}\n\nexport default AddListItemForm;","import React from 'react';\nimport FilterableList from \"./FilterableList\";\nimport FilterOptionsContainer from \"./FilterOptionsContainer\";\nimport AddListItemForm from \"./AddListItemForm\";\nimport './App.css'\n\nconst PRIORITY = {\n  'High': 1,\n  'Med': 2,\n  'Low': 3\n}\n\nconst sortAlphaHelper = (a, b) => {\n  let nameA = a.name.toUpperCase();\n  let nameB = b.name.toUpperCase();\n\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n}\n\nconst sortDateHelper = (a, b) => {\n  return new Date(a.date) - new Date(b.date);\n}\n\nconst sortPriorityHelper = (a, b) => {\n  let priorityA = PRIORITY[a.priority];\n  let priorityB = PRIORITY[b.priority];\n\n  if (priorityA < priorityB) {\n    return -1;\n  }\n  if (priorityA > priorityB) {\n    return 1;\n  }\n  return 0;\n}\n\nconst shuffle = (array) => {\n  let curr = array.length;\n  let temp;\n  let randomIndex;\n\n  while (0 !== curr) {\n    randomIndex = Math.floor(Math.random() * curr);\n    curr -= 1;\n\n    temp = array[curr];\n    array[curr] = array[randomIndex];\n    array[randomIndex] = temp;\n  }\n\n  return array;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // nameList: [{id: 1, name: \"Abraham\", date: \"2016-08-10\", priority: \"Low\"}, {id: 2, name: \"Betsy\", date: \"2016-05-08\", priority: \"High\"}, {id: 3, name: \"Johnny\", date: \"2017-01-30\", priority: \"Med\"}, {id: 4, name: \"Jameson\", date: \"2017-03-04\", priority: \"Med\"}, {id: 5, name: \"Randy\", date: \"2018-02-10\", priority: \"High\"}, {id: 6, name: \"Kendra\", date: \"2019-02-15\", priority: \"Med\"}, {id: 7, name: \"Mathis\", date: \"2017-02-11\", priority: \"Low\"}, {id: 8, name: \"Ben\", date: \"2019-04-11\", priority: \"Med\"}, {id: 9, name: \"Cindy\", date: \"2014-07-01\", priority: \"High\"}, {id: 10, name: \"Neymar\", date: \"2016-09-10\", priority: \"Med\"}, {id: 11, name: \"Daniel\", date: \"2019-10-10\", priority: \"Low\"}, {id: 12, name: \"Xavier\", date: \"2018-04-04\", priority: \"Med\"}],\n      // highestIndex: 12\n      // // nameList: [],\n      // // highestIndex: 0\n    }\n  }\n\n  onFilterOptionClickHandler = (filterOptionEvent) => {\n    filterOptionEvent.preventDefault();\n    // let nameList = this.state.nameList;\n    let nameList = this.props.nameList;\n\n    switch(filterOptionEvent.target.innerText) {\n      case 'A-Z':\n        nameList.sort((a, b) => sortAlphaHelper(a, b));\n        break;\n      case 'Z-A':\n        nameList.sort((a, b) => sortAlphaHelper(a, b));\n        nameList.reverse();\n        break;\n      case 'Random':\n        nameList = shuffle(nameList);\n        break;\n      case 'Chronological':\n        nameList.sort((a, b) => sortDateHelper(a, b));\n        break;\n      case 'Reverse Chronological': \n        nameList.sort((a, b) => sortDateHelper(a, b));\n        nameList.reverse();\n        break;\n      case 'Priority':\n        nameList.sort((a, b) => sortPriorityHelper(a, b));\n        break;\n      default:\n        console.log(\"what on earth happened?\");\n    }\n\n    this.setState({\n      nameList \n    });\n  }\n\n  onAddItemClickHandler = (addItemClickEvent) => {\n    addItemClickEvent.preventDefault();\n    let formInputs = addItemClickEvent.target;\n    // let newNameList = this.state.nameList;\n    // let newIndex = this.state.highestIndex + 1;\n    let newNameList = this.props.nameList;\n    let newIndex = this.props.highestIndex + 1;\n    let newItem = {\n      id: newIndex,\n      name: formInputs[0].value,\n      date: formInputs[1].value,\n      priority: formInputs[2].value\n    }\n\n    newNameList.push(newItem);\n\n    this.props.addItem(newNameList, newIndex);\n\n    // this.setState({\n    //   nameList: newNameList,\n    //   highestIndex: newIndex\n    // })\n  }\n\n  onDoneButtonClickHandler = (id) => {\n    let itemId = id;\n    \n    this.props.doneItem(itemId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <FilterOptionsContainer onFilterOptionClickHandler={this.onFilterOptionClickHandler} />\n        <FilterableList \n          // nameList={this.state.nameList}\n          nameList={this.props.nameList}\n          onDoneButtonClick={this.onDoneButtonClickHandler}\n        />\n        <AddListItemForm onAddItemClick={this.onAddItemClickHandler}/>\n        {this.props.quote}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {connect} from 'react-redux';\nimport ACTIONS from './action.js';\nimport App from './App.js';\n\nconst mapStateToProps = state => ({\n  nameList: state.nameList,\n  highestIndex: state.highestIndex,\n  quote: state.quote\n});\n\nconst mapDispatchToProps = dispatch => ({\n  doneItem: (itemId) => dispatch(ACTIONS.doneItem(itemId)),\n  addItem: (newNameList, newIndex) => dispatch(ACTIONS.addItem(newNameList, newIndex))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ACTIONS from \"./action.js\";\n\nconst defaultState = {\n  nameList: [{id: 1, name: \"Abraham\", date: \"2016-08-10\", priority: \"Low\"}, {id: 2, name: \"Betsy\", date: \"2016-05-08\", priority: \"High\"}, {id: 3, name: \"Johnny\", date: \"2017-01-30\", priority: \"Med\"}, {id: 4, name: \"Jameson\", date: \"2017-03-04\", priority: \"Med\"}, {id: 5, name: \"Randy\", date: \"2018-02-10\", priority: \"High\"}, {id: 6, name: \"Kendra\", date: \"2019-02-15\", priority: \"Med\"}, {id: 7, name: \"Mathis\", date: \"2017-02-11\", priority: \"Low\"}, {id: 8, name: \"Ben\", date: \"2019-04-11\", priority: \"Med\"}, {id: 9, name: \"Cindy\", date: \"2014-07-01\", priority: \"High\"}, {id: 10, name: \"Neymar\", date: \"2016-09-10\", priority: \"Med\"}, {id: 11, name: \"Daniel\", date: \"2019-10-10\", priority: \"Low\"}, {id: 12, name: \"Xavier\", date: \"2018-04-04\", priority: \"Med\"}],\n  highestIndex: 12,\n  // nameList: [],\n  // highestIndex: 0,\n  quote: ''\n}\n\nconst listReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case ACTIONS.TYPES.BEGIN_DONE_ITEM: {\n      let nameList = state.nameList;\n      // let quote = getQuote().then((quote) => {return quote}).resolve();\n      // console.log(quote);\n      nameList = nameList.filter((item) => { return item.id !== action.payload})\n      \n      return {\n        ...state,\n        nameList\n      }\n    }\n    case ACTIONS.TYPES.SUCCESS_DONE_ITEM: {\n      let quote = action.payload;\n      return {\n        ...state,\n        quote\n      }\n    }\n    case ACTIONS.TYPES.ADD_ITEM: {\n      return {\n        nameList: action.payload.nameList,\n        highestIndex: action.payload.highestIndex\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport default listReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer.js';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducer, \n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}